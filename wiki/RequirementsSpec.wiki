#summary Our Requirements Specification
#labels Featured,Phase-Requirements
using guidelines described on [http://en.wikipedia.org/wiki/Software_Requirements_Specification wikipedia]

==Software Requirements Specifications (SRS) - Version 0.2==

  # [http://code.google.com/p/see3po/wiki/RequirementsSpec#1._Introduction INTRODUCTION] --- [Nick],[Debarati]<br/>
   [http://code.google.com/p/see3po/wiki/RequirementsSpec#1.1_Product_Overview 1.1 Product Overview] <br/>
   [http://code.google.com/p/see3po/wiki/RequirementsSpec#1.2_Purpose 1.2 Purpose] <br/>
   [http://code.google.com/p/see3po/wiki/RequirementsSpec#1.3_Scope 1.3 Scope] <br/>
   [http://code.google.com/p/see3po/wiki/RequirementsSpec#1.4_Reference 1.4 Reference] <br/>
   [http://code.google.com/p/see3po/wiki/RequirementsSpec#1.5_Definition_and_Abbreviation 1.5 Definition and Abbreviation] <br/>
  # OVERALL DESCRIPTION<br>
   # Product Perspective<br>
   # Product Functions<br>
   # User Characteristics<br>
   # General Constraints<br>
   # Assumptions and Dependencies<br>
  # SPECIFIC REQUIREMENTS<br>
   # External Interface Requirements<br>
     [http://code.google.com/p/see3po/wiki/RequirementsSpec2.1.1_User_Interfaces 2.1.1 User Interface] <br/>
     [http://code.google.com/p/see3po/wiki/RequirementsSpec2.1.2_Hardware_Interfaces 2.1.2 Hardware Interface] <br/>
     [http://code.google.com/p/see3po/wiki/RequirementsSpec2.1.3_Software_Interfaces 2.1.3 Software Interface] <br/>
     [http://code.google.com/p/see3po/wiki/RequirementsSpec2.1.4_Communications_Protocols 2.1.4 Communications Protocols] <br/>
  # Software Product Features<br>
   # GUI [Frank]<br>
   # Pathfinding [Nick]<br>
   # Floor Plan Processing [Debarati]<br>
  # Software System Attributes [DBD]<br>
   # Reliability<br>
   # Availability<br>
   # Security<br>
   # Maintainability<br>
   # Portability<br>
   # Performance<br>
  # ADDITIONAL MATERIALS <br>
  # Revision History
|| *Revision Date* || *Description Date* || *Document Version* || *Author* ||
|| 12/02/2009|| Created outline for draft verion of SRS || 0.1|| [Frank]||
|| 12/04/2009|| Added Introduction|| 0.2|| [Debarati]||
|| 12/05/2009|| Added Added Hardware/Communications Requirements|| 0.3 || [Jacky]||
|| 12/06/2009|| Added User Interface Requirements|| 0.4 || [Frank]||



= 1. Introduction =


== 1.1 Product Overview ==
See3PO is a path finding robot, which can find the shortest path to reach its destination from its current location and reach there with minimum human intervention.
 
== 1.2 Purpose ==
This is a research project. The main purpose of this project is to make a robot find the shortest path, between its current location and destination, in a given floor plan. The robot should also be capable of updating its current route at a regular interval, in order to take care of any possible hindrance in it's path, that could have come to existence since the last time it calculated its route. And finally it should then reach the destination.

== 1.3 Scope  ==
 * Assumptions: Algorithm to be provided by MERL is delivered on time.
 * Deliverables: GUI, Floor plan processing program, Path finding program..........

 When provided with a given floor plan in acceptable image format, the robot will be able to get its current location on the same, using the algorithm provided by MERL. It will then pass that location information to appropriate programs to compute the shortest path to the destination. It then will move along the computed path towards it's destination. However, the computation of the route is not an one time event, this will continue to be executed at a regular interval, in order to rule out any possible hindrance on the route that could cause the robot to not to reach its destination and if such problems come into existence since the last time the path was calculated, the robot will then re-evaluate the route and follow the newly calculated route.

== 1.4 Reference ==

 # [SystemArchitecture System Architecture]<br/>
 # [UseCases Use Cases]<br/>
== 1.5 Definition and Abbreviation ==
_This section needs to be populated each time we use new abbreviations while working on SRS._
|| *Terms*|| *Meaning* ||
|| SRS || System Requirement Specification||
|| MERL|| Mitsubishi Electric Research Laboratories||
|| Host PC || A Desktop PC used to interact wirelessly to the robot ||
|| See3PO || The Pathfinding Robot ||

== 2.1.1 User Interfaces ==
 * The user will be the operator of the See3PO robot. 
 * From the Host PC interface, the user will control connections to the robot and have the ability to delegate tasks to the robot. 
 * From the Robot interface, the user can change settings such as the IP address of the Host pc. 
== 3.1.1 Hardware Interfaces ==
 * Use wireless network (WiFi) over TCP/IP to communicate between host and robot. 
 
== 3.1.2 Hardware Interfaces ==
 * Use wireless network (WiFi) over TCP/IP to communicate between host and robot. 
 * Host acts as server and robot acts as client while establishing connection.
 * Robot is able to connect or disconnect from host through interface.
 * Robot can configure the IP address of host so the host can be deployed on different environment.
 * Use serial port with cable over RS-232 to communicate between robot and control unit.
 * Robot has interface for controlling its movement therefore it can be tested without receiving command from host. 

== 3.1.4 Communications Protocols ==
 Please refers to [http://see3po.googlecode.com/svn/trunk/Documents/Hardware/communication%20protocols.doc Communications Protocol Document].
  
== 3.1.3 Hardware Interfaces ==
 * The Operating System must be Windows, and has been tested on Windows XP, Windows Vista and Windows 7. 
 * Host PCâ€™s must have the most current version of .Net Framework. 
  